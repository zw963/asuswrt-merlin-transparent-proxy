#!/bin/sh

self="$(\curl -sS https://gitlab.com/zw963/deployment_bash/-/raw/v0.8.1/deploy_start.sh)" && eval "$self"

export target=$1

if grep -qs -e 'set_yours_password_here' server/ss-server/server.json; then
    echo "You must change \`[0m[33mset_yours_password_here[0m' to a NEW password in \`./server/ss-server/server.json'!"
    exit
fi

function postinstall () {
    set -u
    echo
    echo 'Copy sslocal into local ...'

    scp $target:/usr/bin/sslocal .
}

copy server/ss-server/server.json /etc/shadowsocks/config.json

deploy_start

set -eu
# Following code is execute on remote VPS

if which ssserver &>/dev/null; then
    set +e
    systemctl stop shadowsocks
    set -e
    # exit
fi

config_sysctl_for_proxy

version='1.17.0'

# package compile-tools pcre-devel asciidoc xmlto mbedtls-devel \
    #         udns-devel libev-devel libsodium-devel rng-tools c-ares-devel

# sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# if [[ -e /etc/redhat-release && $(cat /etc/redhat-release) =~ CentOS ]]; then
#     systemctl start rngd
#     systemctl status rngd
# elif [[ $(cat /etc/issue) =~ Ubuntu|Mint|Deepin ]]; then
#     service rng-tools start
#     service rng-tools status
# fi

dest=shadowsocks-v${version}.x86_64-unknown-linux-gnu
download_and_extract https://github.com/shadowsocks/shadowsocks-rust/releases/download/v${version}/$dest.tar.xz $dest 0
cd $dest && cp -v sslocal ssserver ssurl ssmanager /usr/bin/ && cd .. && rm -rf $dest

if which strip &>/dev/null; then
    cd /usr/bin
    strip sslocal ssserver ssurl ssmanager
fi

daemon shadowsocks '/usr/bin/ssserver --tcp-fast-open --config /etc/shadowsocks/config.json'

server_port=$(cat /etc/shadowsocks/config.json |grep 'server_port"' |grep -o '[0-9]*')
expose_port $server_port
